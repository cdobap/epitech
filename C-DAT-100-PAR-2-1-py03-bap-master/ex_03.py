import requests as rq
from bs4 import BeautifulSoup

def member_of():
    response = rq.get("https://graph.microsoft.com/beta/me/memberOf", 
    headers={'Authorization':'eyJ0eXAiOiJKV1QiLCJub25jZSI6InA2OXRvdGtnTnRma3FhS00wbDBaTkVyZFhIUTlnVVRpU1kxZzNqRk5SMGciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYvIiwiaWF0IjoxNjI5MzEyOTIyLCJuYmYiOjE2MjkzMTI5MjIsImV4cCI6MTYyOTMxNjgyMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhUQUFBQXlxcnMweS9xR1kyeGpjWGtOYytKRklPVVBLRjdyRFV3dU5zOFd6aVlzeVdZaG05c0JTWHBER2hoeFpqRFZzU0h5YmJBejl2RXNadWIySXVtUUlRclZBPT0iLCJhbXIiOlsicHdkIiwibWZhIl0sImFwcF9kaXNwbGF5bmFtZSI6IkdyYXBoIEV4cGxvcmVyIiwiYXBwaWQiOiJkZThiYzhiNS1kOWY5LTQ4YjEtYThhZC1iNzQ4ZGE3MjUwNjQiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6IkNhcmRvc28iLCJnaXZlbl9uYW1lIjoiQmFwdGlzdGUiLCJpZHR5cCI6InVzZXIiLCJpbl9jb3JwIjoidHJ1ZSIsImlwYWRkciI6Ijc4LjIwMS42Ni4xOTUiLCJuYW1lIjoiQmFwdGlzdGUgQ2FyZG9zbyIsIm9pZCI6Ijc1NmJkNmYzLWM5NDMtNGQ4Ni1hOTkxLTYxZjIzYmVkZjdjNyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0xNTUyNDM1Mjc3LTE1OTY0OTU3OTUtMzA4OTYxMzczMS00MjkwNiIsInBsYXRmIjoiOCIsInB1aWQiOiIxMDAzMjAwMTRBQTI1RkFGIiwicmgiOiIwLkFYUUF5clFja0dLNEtVQ1RCdVhORDIyZmhyWElpOTc1MmJGSXFLMjNTTnB5VUdSMEFDVS4iLCJzY3AiOiJHcm91cC5SZWFkLkFsbCBHcm91cC5SZWFkV3JpdGUuQWxsIG9wZW5pZCBwcm9maWxlIFVzZXIuUmVhZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IlNKMVJLVFJ5dWp3TElxQkl4ZUt6TFZ0QU1pVElZSXRESEpqcFB1N3ZvS3MiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiRVUiLCJ0aWQiOiI5MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYiLCJ1bmlxdWVfbmFtZSI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInVwbiI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInV0aSI6Il8wNDdqX05qeGtTcllvYXRKbUxHQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiU3o0eVNvbWUzUzRrTkJCT05QZjdoUl9Vd0lVMXpJRWpBQ3FZNmZENWJINCJ9LCJ4bXNfdGNkdCI6MTQxNzgwNDg4N30.Voa29nzDPlIKA_jpY7qrV-IvvTkzUuECIdkSx_6iZHuAeL3SxnhjTy7a9xEk-A5Wo54ItHkx9lrJWRgIw2q_kDvgVXwcdSsCnDBcm0EYb8XWqJevM3VrS-8kqMUafY8A2BpQED1FLqscNI93uWOPKxO3R07Nv3ANkSoVytjaxKdYx76YTtrWkYnfzVYqFf_BBEyh-Pba-YAC8Cp8tOfQLmXcrBNcBhnRCGsGzAKoPbdVZLljgVx0BRgn2YuzqjBnI0pJ8nqPcwPfLqas6joTtaTkwKoUWlufED8t9J3_NwYtzsXJ48ii-Wpj14xjkzxC5ELUslUnYp3GQw96jQ3xpQ'})
    data = response.json()
    for team in data["value"]:
        # print("___________________")
        print(team["displayName"])
        print(team["id"])      
        print("___________________")

member_of()

def get_channels(teams_id):
    response = rq.get("https://graph.microsoft.com/beta/teams/" + teams_id + "/channels",
    headers={'Authorization':'eyJ0eXAiOiJKV1QiLCJub25jZSI6InA2OXRvdGtnTnRma3FhS00wbDBaTkVyZFhIUTlnVVRpU1kxZzNqRk5SMGciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYvIiwiaWF0IjoxNjI5MzEyOTIyLCJuYmYiOjE2MjkzMTI5MjIsImV4cCI6MTYyOTMxNjgyMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhUQUFBQXlxcnMweS9xR1kyeGpjWGtOYytKRklPVVBLRjdyRFV3dU5zOFd6aVlzeVdZaG05c0JTWHBER2hoeFpqRFZzU0h5YmJBejl2RXNadWIySXVtUUlRclZBPT0iLCJhbXIiOlsicHdkIiwibWZhIl0sImFwcF9kaXNwbGF5bmFtZSI6IkdyYXBoIEV4cGxvcmVyIiwiYXBwaWQiOiJkZThiYzhiNS1kOWY5LTQ4YjEtYThhZC1iNzQ4ZGE3MjUwNjQiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6IkNhcmRvc28iLCJnaXZlbl9uYW1lIjoiQmFwdGlzdGUiLCJpZHR5cCI6InVzZXIiLCJpbl9jb3JwIjoidHJ1ZSIsImlwYWRkciI6Ijc4LjIwMS42Ni4xOTUiLCJuYW1lIjoiQmFwdGlzdGUgQ2FyZG9zbyIsIm9pZCI6Ijc1NmJkNmYzLWM5NDMtNGQ4Ni1hOTkxLTYxZjIzYmVkZjdjNyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0xNTUyNDM1Mjc3LTE1OTY0OTU3OTUtMzA4OTYxMzczMS00MjkwNiIsInBsYXRmIjoiOCIsInB1aWQiOiIxMDAzMjAwMTRBQTI1RkFGIiwicmgiOiIwLkFYUUF5clFja0dLNEtVQ1RCdVhORDIyZmhyWElpOTc1MmJGSXFLMjNTTnB5VUdSMEFDVS4iLCJzY3AiOiJHcm91cC5SZWFkLkFsbCBHcm91cC5SZWFkV3JpdGUuQWxsIG9wZW5pZCBwcm9maWxlIFVzZXIuUmVhZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IlNKMVJLVFJ5dWp3TElxQkl4ZUt6TFZ0QU1pVElZSXRESEpqcFB1N3ZvS3MiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiRVUiLCJ0aWQiOiI5MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYiLCJ1bmlxdWVfbmFtZSI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInVwbiI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInV0aSI6Il8wNDdqX05qeGtTcllvYXRKbUxHQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiU3o0eVNvbWUzUzRrTkJCT05QZjdoUl9Vd0lVMXpJRWpBQ3FZNmZENWJINCJ9LCJ4bXNfdGNkdCI6MTQxNzgwNDg4N30.Voa29nzDPlIKA_jpY7qrV-IvvTkzUuECIdkSx_6iZHuAeL3SxnhjTy7a9xEk-A5Wo54ItHkx9lrJWRgIw2q_kDvgVXwcdSsCnDBcm0EYb8XWqJevM3VrS-8kqMUafY8A2BpQED1FLqscNI93uWOPKxO3R07Nv3ANkSoVytjaxKdYx76YTtrWkYnfzVYqFf_BBEyh-Pba-YAC8Cp8tOfQLmXcrBNcBhnRCGsGzAKoPbdVZLljgVx0BRgn2YuzqjBnI0pJ8nqPcwPfLqas6joTtaTkwKoUWlufED8t9J3_NwYtzsXJ48ii-Wpj14xjkzxC5ELUslUnYp3GQw96jQ3xpQ'})
    data = response.json()
    for channel in data["value"]:
        print("___________________")
        print(channel["displayName"])
        print(channel["id"])
        # print("___________________")

get_channels("fd09056a-a911-4a07-b310-e82a6b919e55")

def get_messages(teams_id, channel_id):
    response = rq.get("https://graph.microsoft.com/beta/teams/" + teams_id + "/channels/" + channel_id + "/messages",
    headers={'Authorization':'eyJ0eXAiOiJKV1QiLCJub25jZSI6InA2OXRvdGtnTnRma3FhS00wbDBaTkVyZFhIUTlnVVRpU1kxZzNqRk5SMGciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYvIiwiaWF0IjoxNjI5MzEyOTIyLCJuYmYiOjE2MjkzMTI5MjIsImV4cCI6MTYyOTMxNjgyMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhUQUFBQXlxcnMweS9xR1kyeGpjWGtOYytKRklPVVBLRjdyRFV3dU5zOFd6aVlzeVdZaG05c0JTWHBER2hoeFpqRFZzU0h5YmJBejl2RXNadWIySXVtUUlRclZBPT0iLCJhbXIiOlsicHdkIiwibWZhIl0sImFwcF9kaXNwbGF5bmFtZSI6IkdyYXBoIEV4cGxvcmVyIiwiYXBwaWQiOiJkZThiYzhiNS1kOWY5LTQ4YjEtYThhZC1iNzQ4ZGE3MjUwNjQiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6IkNhcmRvc28iLCJnaXZlbl9uYW1lIjoiQmFwdGlzdGUiLCJpZHR5cCI6InVzZXIiLCJpbl9jb3JwIjoidHJ1ZSIsImlwYWRkciI6Ijc4LjIwMS42Ni4xOTUiLCJuYW1lIjoiQmFwdGlzdGUgQ2FyZG9zbyIsIm9pZCI6Ijc1NmJkNmYzLWM5NDMtNGQ4Ni1hOTkxLTYxZjIzYmVkZjdjNyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0xNTUyNDM1Mjc3LTE1OTY0OTU3OTUtMzA4OTYxMzczMS00MjkwNiIsInBsYXRmIjoiOCIsInB1aWQiOiIxMDAzMjAwMTRBQTI1RkFGIiwicmgiOiIwLkFYUUF5clFja0dLNEtVQ1RCdVhORDIyZmhyWElpOTc1MmJGSXFLMjNTTnB5VUdSMEFDVS4iLCJzY3AiOiJHcm91cC5SZWFkLkFsbCBHcm91cC5SZWFkV3JpdGUuQWxsIG9wZW5pZCBwcm9maWxlIFVzZXIuUmVhZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IlNKMVJLVFJ5dWp3TElxQkl4ZUt6TFZ0QU1pVElZSXRESEpqcFB1N3ZvS3MiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiRVUiLCJ0aWQiOiI5MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYiLCJ1bmlxdWVfbmFtZSI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInVwbiI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInV0aSI6Il8wNDdqX05qeGtTcllvYXRKbUxHQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiU3o0eVNvbWUzUzRrTkJCT05QZjdoUl9Vd0lVMXpJRWpBQ3FZNmZENWJINCJ9LCJ4bXNfdGNkdCI6MTQxNzgwNDg4N30.Voa29nzDPlIKA_jpY7qrV-IvvTkzUuECIdkSx_6iZHuAeL3SxnhjTy7a9xEk-A5Wo54ItHkx9lrJWRgIw2q_kDvgVXwcdSsCnDBcm0EYb8XWqJevM3VrS-8kqMUafY8A2BpQED1FLqscNI93uWOPKxO3R07Nv3ANkSoVytjaxKdYx76YTtrWkYnfzVYqFf_BBEyh-Pba-YAC8Cp8tOfQLmXcrBNcBhnRCGsGzAKoPbdVZLljgVx0BRgn2YuzqjBnI0pJ8nqPcwPfLqas6joTtaTkwKoUWlufED8t9J3_NwYtzsXJ48ii-Wpj14xjkzxC5ELUslUnYp3GQw96jQ3xpQ'})
    data = response.json()
    for message in data["value"]:
        if message["from"] == None:
            continue
        else:
            print("___________________________________________________________________")
            print(message["from"]["user"]["displayName"])
            soup = BeautifulSoup(message["body"]["content"], 'html.parser')
            print(soup.get_text())
            res = rq.get("https://graph.microsoft.com/beta/teams/" + teams_id + "/channels/" + channel_id + "/messages/" + message["id"] + "/replies",
            headers={'Authorization':'eyJ0eXAiOiJKV1QiLCJub25jZSI6InA2OXRvdGtnTnRma3FhS00wbDBaTkVyZFhIUTlnVVRpU1kxZzNqRk5SMGciLCJhbGciOiJSUzI1NiIsIng1dCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyIsImtpZCI6Im5PbzNaRHJPRFhFSzFqS1doWHNsSFJfS1hFZyJ9.eyJhdWQiOiIwMDAwMDAwMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwMDAiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC85MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYvIiwiaWF0IjoxNjI5MzEyOTIyLCJuYmYiOjE2MjkzMTI5MjIsImV4cCI6MTYyOTMxNjgyMiwiYWNjdCI6MCwiYWNyIjoiMSIsImFpbyI6IkFVUUF1LzhUQUFBQXlxcnMweS9xR1kyeGpjWGtOYytKRklPVVBLRjdyRFV3dU5zOFd6aVlzeVdZaG05c0JTWHBER2hoeFpqRFZzU0h5YmJBejl2RXNadWIySXVtUUlRclZBPT0iLCJhbXIiOlsicHdkIiwibWZhIl0sImFwcF9kaXNwbGF5bmFtZSI6IkdyYXBoIEV4cGxvcmVyIiwiYXBwaWQiOiJkZThiYzhiNS1kOWY5LTQ4YjEtYThhZC1iNzQ4ZGE3MjUwNjQiLCJhcHBpZGFjciI6IjAiLCJmYW1pbHlfbmFtZSI6IkNhcmRvc28iLCJnaXZlbl9uYW1lIjoiQmFwdGlzdGUiLCJpZHR5cCI6InVzZXIiLCJpbl9jb3JwIjoidHJ1ZSIsImlwYWRkciI6Ijc4LjIwMS42Ni4xOTUiLCJuYW1lIjoiQmFwdGlzdGUgQ2FyZG9zbyIsIm9pZCI6Ijc1NmJkNmYzLWM5NDMtNGQ4Ni1hOTkxLTYxZjIzYmVkZjdjNyIsIm9ucHJlbV9zaWQiOiJTLTEtNS0yMS0xNTUyNDM1Mjc3LTE1OTY0OTU3OTUtMzA4OTYxMzczMS00MjkwNiIsInBsYXRmIjoiOCIsInB1aWQiOiIxMDAzMjAwMTRBQTI1RkFGIiwicmgiOiIwLkFYUUF5clFja0dLNEtVQ1RCdVhORDIyZmhyWElpOTc1MmJGSXFLMjNTTnB5VUdSMEFDVS4iLCJzY3AiOiJHcm91cC5SZWFkLkFsbCBHcm91cC5SZWFkV3JpdGUuQWxsIG9wZW5pZCBwcm9maWxlIFVzZXIuUmVhZCBlbWFpbCIsInNpZ25pbl9zdGF0ZSI6WyJrbXNpIl0sInN1YiI6IlNKMVJLVFJ5dWp3TElxQkl4ZUt6TFZ0QU1pVElZSXRESEpqcFB1N3ZvS3MiLCJ0ZW5hbnRfcmVnaW9uX3Njb3BlIjoiRVUiLCJ0aWQiOiI5MDFjYjRjYS1iODYyLTQwMjktOTMwNi1lNWNkMGY2ZDlmODYiLCJ1bmlxdWVfbmFtZSI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInVwbiI6ImJhcHRpc3RlLmNhcmRvc29AZXBpdGVjaC5ldSIsInV0aSI6Il8wNDdqX05qeGtTcllvYXRKbUxHQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfc3QiOnsic3ViIjoiU3o0eVNvbWUzUzRrTkJCT05QZjdoUl9Vd0lVMXpJRWpBQ3FZNmZENWJINCJ9LCJ4bXNfdGNkdCI6MTQxNzgwNDg4N30.Voa29nzDPlIKA_jpY7qrV-IvvTkzUuECIdkSx_6iZHuAeL3SxnhjTy7a9xEk-A5Wo54ItHkx9lrJWRgIw2q_kDvgVXwcdSsCnDBcm0EYb8XWqJevM3VrS-8kqMUafY8A2BpQED1FLqscNI93uWOPKxO3R07Nv3ANkSoVytjaxKdYx76YTtrWkYnfzVYqFf_BBEyh-Pba-YAC8Cp8tOfQLmXcrBNcBhnRCGsGzAKoPbdVZLljgVx0BRgn2YuzqjBnI0pJ8nqPcwPfLqas6joTtaTkwKoUWlufED8t9J3_NwYtzsXJ48ii-Wpj14xjkzxC5ELUslUnYp3GQw96jQ3xpQ'})
            comments = res.json()
            for comment in comments["value"]:
                if comment["from"] == None:
                    continue
                else:
                    print("____" + comment["from"]["user"]["displayName"])
                    soup = BeautifulSoup(comment["body"]["content"], 'html.parser')
                    print("_______" + soup.get_text())

get_messages("fd09056a-a911-4a07-b310-e82a6b919e55", "19:092ff6fc40dc49e39793118a783ffed7@thread.tacv2")
